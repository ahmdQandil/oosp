import java.util.ArrayList;

public class Restaurant {
    private String name;
    private ArrayList<String> menu;
    private ArrayList<String> orderList;

    public Restaurant(String name, ArrayList<String> menu) {
        this.name = name;
        this.menu = menu;
        this.orderList = new ArrayList<String>();
    }

    private static ArrayList<String> createMenu() {
        ArrayList<String> menu = new ArrayList<String>();
        menu.add("Burger, 8.50, beef");
        menu.add("Pizza, 10.00, cheese");
        menu.add("Spaghetti, 12.50, meatballs");
        menu.add("Salad, 7.50, mixed greens");
        menu.add("Sandwich, 9.00, turkey");
        menu.add("Fish and Chips, 11.50, cod");
        menu.add("Tacos, 8.00, chicken");
        menu.add("Steak, 15.00, ribeye");
        menu.add("Soup, 6.50, tomato");
        return menu;
    }

    public void addOrder(String order) {
        this.orderList.add(order);
        System.out.println("Added order: " + order);
    }

    public void fulfillOrder() {
        if (this.orderList.size() > 0) {
            String order = this.orderList.get(0);
            this.orderList.remove(0);
            System.out.println("Fulfilled order: " + order);
        } else {
            System.out.println("No orders to fulfill.");
        }
    }

    public void listOrders() {
        if (this.orderList.size() > 0) {
            System.out.println("Current orders:");
            for (String order : this.orderList) {
                System.out.println(order);
            }
        } else {
            System.out.println("No orders.");
        }
    }

    public double dueAmount() {
        double total = 0;
        for (String order : this.orderList) {
            String[] items = order.split(",");
            double price = Double.parseDouble(items[1].trim());
            total += price;
        }
        return total;
    }

    public String cheapestItem() {
        String cheapestItem = "";
        double cheapestPrice = Double.MAX_VALUE;
        for (String item : this.menu) {
            String[] parts = item.split(",");
            double price = Double.parseDouble(parts[1].trim());
            if (price < cheapestPrice) {
                cheapestItem = parts[0].trim();
                cheapestPrice = price;
            }
        }
        return cheapestItem;
    }

    public void beefItemsOnly() {
        System.out.println("Beef items:");
        for (String item : this.menu) {
            String[] parts = item.split(",");
            String type = parts[2].trim();
            if (type.equals("beef")) {
                System.out.println(parts[0].trim());
            }
        }
    }

    public void vegetarianItemsOnly() {
        System.out.println("Vegetarian items:");
        for (String item : this.menu) {
            String[] parts = item.split(",");
            String type = parts[2].trim();
            if (type.equals("vegetarian")) {
                System.out.println(parts[0].trim());
            }
        }
    }

    public void glutenFreeItemsOnly() {
        System.out.println("Gluten-free items:");
        for (String item : this.menu) {
            String[] parts = item.split(",");
            String type = parts[2].trim();
            if (type.equals("gluten-free")) {
                System.out.println(parts[0].trim());
            }
        }
    }
}
